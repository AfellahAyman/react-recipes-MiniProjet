{"version":3,"sources":["logo.svg","RecipeCard.js","Recipes.js","serviceWorker.js","index.js"],"names":["module","exports","RecipeCard","props","ingredientsTable","className","style","handleDisplayStyle","state","showIngredients","onClick","handleShowIngredients","event","stopPropagation","recipe","title","ingredients","editingForm","showEditingForm","handleEditClick","type","recipeID","inpu","id","placeholder","image","description","time","href","test","class","map","i","contenteditable","e","target","handleEditRecipe","generateIngredientsRows","property","this","setState","forms","document","getElementsByClassName","valid","Array","prototype","forEach","call","value","classList","add","remove","push","textContent","getElementById","editFunction","deleteFunction","src","React","Component","Recipes","addForm","showAddForm","handleAddClick","handleNewRecipe","recipes","data","addEventListener","storage","localStorage","setItem","removeItem","storageAvailable","localRef","getItem","JSON","stringify","parse","console","error","nextProps","nextState","addRecipe","last","Date","now","log","r","key","deleteRecipe","editRecipe","Object","keys","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3ba79460.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nclass RecipeCard extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                showIngredients: false,\r\n                showEditingForm: false\r\n            }\r\n            this.recipe = props.recipe;\r\n            this.recipeID = this.recipe.recipeID;\r\n            this.ingredients = this.generateIngredientsRows();\r\n        }\r\n        ingredientsTable = () => {\r\n            return(\r\n                <div className=\"overlay\" style={this.handleDisplayStyle(this.state.showIngredients)} onClick={ ()=> { this.handleShowIngredients(); } } >\r\n                    <div className=\"overlay-content rounded\" onClick={ (event)=> { event.stopPropagation(); } }>\r\n                    <center><h3><br/>{this.recipe.title} </h3></center>\r\n                        <div className=\"ingredients\">\r\n                        <h5>Ingredients: </h5>\r\n                        < table className=\"table table-striped\">\r\n                            <tbody>{this.ingredients}</tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        editingForm = () => {\r\n            return(\r\n                <div className=\"overlay\" style={this.handleDisplayStyle(this.state.showEditingForm)} onClick={ ()=> { this.handleEditClick(); } } >\r\n                    <div className=\"overlay-content rounded\" onClick={ (event)=> { event.stopPropagation(); } }>\r\n                        <center><h1><br/>{this.recipe.title}</h1></center>\r\n                        <div className=\"editForm\">\r\n                            <div className=\"form-group\">\r\n                                <label>Titre:</label>\r\n                                <input type=\"text\" className={`form-control input-${this.recipeID}`} inpu id={`editTitle${this.recipeID}`} placeholder={this.recipe.title}/><br/>\r\n                                <label>Image:</label>\r\n                                <input type=\"text\" className={`form-control input-${this.recipeID}`} id={`editImage${this.recipeID}`} placeholder={this.recipe.image}/><br/>\r\n                                <label>Description:</label>\r\n                                <textarea className={`form-control input-${this.recipeID}`} id={`editDescription${this.recipeID}`} placeholder={this.recipe.description}/><br/>\r\n                                <label>Temps de Pr√©paration:</label>\r\n                                <input type=\"number\" className={`form-control input-${this.recipeID}`} id={`editTime${this.recipeID}`} placeholder={this.recipe.time}/><br/>\r\n                                <label>Ingredients: </label><a href=\"#\" onClick={()=>test('editForm',this.recipeID)} class=\"text-success\"><i\r\n            class=\"fa fa-plus fa-sm float-right\"></i></a>\r\n                <table className=\"table table-striped\" id=\"editRecipe-Table\">\r\n                  <tbody>{this.recipe.ingredients.map(i => {\r\n                return ( <tr><td> {\r\n                        <li className={`edit-Ingredients-${this.recipeID}`} contenteditable=\"true\">{i}</li>\r\n                        } </td><td><a href=\"#\" class=\"text-danger\" onClick={(e)=>{test(e.target)}}><i\r\n                        class=\"fa fa-minus fa-sm float-right\"></i></a></td></tr>);})}</tbody>\r\n                </table>\r\n                                <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={(event)=>{this.handleEditRecipe(event)}}>Edit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        handleDisplayStyle(property){\r\n            return { \"display\": property==true ? \"block\" : \"none\" };\r\n        }\r\n        handleShowIngredients() {\r\n            this.setState({\r\n                showIngredients: !this.state.showIngredients\r\n            });\r\n        }\r\n        handleEditRecipe(event){\r\n            var forms = document.getElementsByClassName(\"input-\"+this.recipeID);\r\n            let valid = true;\r\n            Array.prototype.forEach.call(forms, function(e) {\r\n                if(e.value==\"\"){\r\n                    e.classList.add(\"is-invalid\");\r\n                    valid = false;\r\n                }\r\n                else{\r\n                    e.classList.remove(\"is-invalid\");\r\n                }\r\n            });\r\n            if(valid){\r\n                var ingredients = [];\r\n                Array.prototype.forEach.call(document.getElementsByClassName(\"edit-Ingredients-\"+this.recipeID), function(e) {\r\n                    ingredients.push(e.textContent);\r\n                });\r\n            var recipe = {\r\n                recipeID: this.recipeID,\r\n                title: document.getElementById(\"editTitle\" + this.recipeID).value,\r\n                image: document.getElementById(\"editImage\" + this.recipeID).value,\r\n                description: document.getElementById(\"editDescription\" + this.recipeID).value,\r\n                time: document.getElementById(\"editTime\" + this.recipeID).value,\r\n                ingredients\r\n            };\r\n            this.props.editFunction(recipe);\r\n            this.handleEditClick();\r\n        }\r\n        }\r\n        handleEditClick() {\r\n            this.setState({\r\n                showEditingForm: !this.state.showEditingForm\r\n            });\r\n        }\r\n        generateIngredientsRows() {\r\n            return this.recipe.ingredients.map(i => {\r\n                return ( <tr><td> {\r\n                        <li>{i}</li>\r\n                        } </td></tr>);});\r\n        }\r\n        render() {\r\n            return [\r\n            <>{this.editingForm()}</>,\r\n            <>{this.ingredientsTable()}</>,\r\n            <div className=\"col-md-4 p-3\">\r\n                <div className=\"recipeCard\">\r\n                    <button type=\"button\" className=\"btn btn-warning btn-rounded\" onClick={ ()=> this.handleEditClick() } >\r\n                        < i style={ { \"color\": \"white\" } } className=\"fa fa-pencil-square-o fa-lg\"> </i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-danger btn-rounded\" onClick={()=>this.props.deleteFunction()} >\r\n                        < i className=\"fa fa-minus fa-lg\"> </i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card box-shadow\">\r\n                    <img className=\"card-img-top\" src={ this.recipe.image }/>\r\n                    <div className=\"card-body\">\r\n                        <center>\r\n                            <h6> {\r\n                                this.recipe.title\r\n                            } </h6> </center>\r\n                        <div className=\"card-text\"> { this.recipe.description }\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"Empty\"></div>\r\n                                <small className=\"text-muted timeText\">Total Time: {\r\n                                this.recipe.time\r\n                            } {\r\n                                this.recipe.time !== \"1\" ? \"mins\" : \"min\"\r\n                            } </small> </div>\r\n                        </div>\r\n                        <center>\r\n                            <a href=\"#\" onClick={ ()=> {\r\n                                    this.handleShowIngredients();\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            className = \"btn btn-primary stretched-link ingredientsButton\" > Ingredients </a> </center>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n            }\r\n                            }\r\nexport default RecipeCard;","import React from 'react';\r\nimport RecipeCard from './RecipeCard';\r\nimport data from './recipes.json';\r\n\r\nclass Recipes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      showAddForm: false,\r\n      recipes: data}\r\n  }\r\n  componentDidMount(){\r\n    document.getElementById(\"buttonAdd\").addEventListener(\"click\",()=>{this.handleAddClick()});\r\n  }\r\n  storageAvailable(storage){\r\n    try {\r\n        localStorage.setItem(\"test\", \"test\");\r\n        localStorage.removeItem(\"test\");\r\n        return true;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\ncomponentWillMount() {\r\n    if (this.storageAvailable('localStorage')) {\r\n        const localRef = localStorage.getItem('recipes',JSON.stringify(this.state.recipes));\r\n        if (localRef) {\r\n            this.setState({\r\n                recipes: JSON.parse(localRef)\r\n            })\r\n        }\r\n    } else {\r\n        console.error('Your browser doesn\\'t support local storage');\r\n    }\r\n}\r\ncomponentWillUpdate(nextProps, nextState) {\r\n    if (this.storageAvailable('localStorage')) {\r\n        const ref = localStorage.setItem('recipes',JSON.stringify(nextState.recipes))\r\n    } else {\r\n        console.error('Your browser doesn\\'t support local storage');\r\n    }\r\n}\r\n  addForm = () => {\r\n    return(\r\n      <div className=\"overlay\" style={ { \"display\": this.state.showAddForm==true ? \"block\" : \"none\" } } onClick={ ()=> { this.handleAddClick(); } } >\r\n    <div className=\"overlay-content\" onClick={ (event)=> { event.stopPropagation(); } }>\r\n        <center><h1>New Recipe</h1></center>\r\n        <div className=\"addForm\">\r\n            <div className=\"form-group\">\r\n                <label>Titre:</label>\r\n                <input type=\"text\" className=\"form-control input-new\" id=\"newTitle\" /><br/>\r\n                <label>Image:</label>\r\n                <input type=\"text\" className=\"form-control input-new\" id=\"newImage\" /><br/>\r\n                <label>Description:</label>\r\n                <textarea className=\"form-control input-new\" id=\"newDescription\" /><br/>\r\n                <label>Temps de Pr√©paration:</label>\r\n                <input type=\"number\" className=\"form-control input-new\" id=\"newTime\" /><br/>\r\n                <label>Ingredients: </label><a href=\"#\" onClick={()=>test('addForm')} class=\"text-success\"><i\r\n            class=\"fa fa-plus fa-sm float-right\"></i></a>\r\n                <table className=\"table table-striped\" id=\"newRecipe-Table\">\r\n                  <tbody></tbody>\r\n                </table>\r\n                <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={(event)=>this.handleNewRecipe(event)}>Add</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n  }\r\n  handleAddClick(){\r\n    this.setState({\r\n      showAddForm: !this.state.showAddForm\r\n  });\r\n  }\r\n  handleNewRecipe(){\r\n    var forms = document.getElementsByClassName(\"input-new\");\r\n            let valid = true;\r\n            Array.prototype.forEach.call(forms, function(e) {\r\n                if(e.value==\"\"){\r\n                    e.classList.add(\"is-invalid\");\r\n                    valid = false;\r\n                }\r\n                else{\r\n                    e.classList.remove(\"is-invalid\");\r\n                }\r\n            });\r\n            if(valid){\r\n    var ingredients = [];\r\n    Array.prototype.forEach.call(document.getElementsByClassName(\"add-Ingredients\"), function(e) {\r\n      ingredients.push(e.textContent);\r\n  });\r\n    var recipe = {\r\n      title: document.getElementById(\"newTitle\").value,\r\n      image: document.getElementById(\"newImage\").value,\r\n      description: document.getElementById(\"newDescription\").value,\r\n      time: document.getElementById(\"newTime\").value,\r\n      ingredients\r\n    };\r\n    Array.prototype.forEach.call(forms, function(e) {\r\n            e.value=\"\";\r\n            });\r\n    test(\"clear\");\r\n    this.addRecipe(recipe);\r\n    this.handleAddClick();\r\n  }\r\n  }\r\n  addRecipe(recipe){\r\n    const recipes = {...this.state.recipes};\r\n    const last = Date.now();\r\n    recipe.recipeID = `recipe${last}`;\r\n    recipes[`recipe${last}`] = recipe;\r\n    this.setState({recipes});\r\n  }\r\n  deleteRecipe(recipeID){\r\n    const recipes = {...this.state.recipes};\r\n    delete recipes[recipeID];\r\n    this.setState({recipes});\r\n  }\r\n  editRecipe(recipe){\r\n    var recipes = {...this.state.recipes};\r\n    console.log(recipes);\r\n    recipes[recipe.recipeID].title=recipe.title;\r\n    recipes[recipe.recipeID].image=recipe.image;\r\n    recipes[recipe.recipeID].description=recipe.description;\r\n    recipes[recipe.recipeID].time=recipe.time;\r\n    recipes[recipe.recipeID].ingredients=recipe.ingredients;\r\n    this.setState({recipes})\r\n  }\r\n  render(){\r\n    var r = [];\r\n    r.push(<>{this.addForm()}</>);\r\n    for(const key of (Object.keys(this.state.recipes))){\r\n    r.push(<RecipeCard key={key} recipe={this.state.recipes[key]} deleteFunction={()=>{this.deleteRecipe(key)}} \r\n    editFunction={(recipe)=>{this.editRecipe(recipe)}} />);\r\n}\r\nreturn r;\r\n  }\r\n//    return recipes.map(e => <RecipeCard recipe={recipes[e]} />);\r\n}\r\nexport default Recipes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport Recipes from './Recipes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Recipes/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}